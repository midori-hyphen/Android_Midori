name: Android CI/CD

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: 🧪 테스트 실행
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 체크아웃
      uses: actions/checkout@v4
      
    - name: ☕ JDK 17 설정
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: 📦 Gradle 캐시
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: 🔧 Gradle 권한 설정
      run: chmod +x gradlew
      
    - name: 🧪 단위 테스트 실행
      run: ./gradlew testDebugUnitTest
      
    - name: 📊 테스트 결과 업로드
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: app/build/test-results/
        
    - name: 📈 테스트 커버리지 리포트
      run: ./gradlew jacocoTestReport
      
  lint:
    name: 🔍 코드 품질 검사
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 체크아웃
      uses: actions/checkout@v4
      
    - name: ☕ JDK 17 설정
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: 🔧 Gradle 권한 설정
      run: chmod +x gradlew
      
    - name: 🔍 Lint 검사 실행
      run: ./gradlew lintDebug
      
    - name: 📊 Lint 결과 업로드
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: lint-results
        path: app/build/reports/lint-results-debug.html

  build:
    name: 🏗️ 빌드
    runs-on: ubuntu-latest
    needs: [test, lint]
    
    steps:
    - name: 📥 체크아웃
      uses: actions/checkout@v4
      
    - name: ☕ JDK 17 설정
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: 🔧 Gradle 권한 설정
      run: chmod +x gradlew
      
    - name: 🏗️ Debug APK 빌드
      run: ./gradlew assembleDebug
      
    - name: 📱 APK 업로드
      uses: actions/upload-artifact@v4
      with:
        name: debug-apk
        path: app/build/outputs/apk/debug/*.apk
        
  security:
    name: 🔒 보안 검사
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 체크아웃
      uses: actions/checkout@v4
      
    - name: 🔒 의존성 보안 검사
      uses: securecodewarrior/github-action-add-sarif@v1
      with:
        sarif-file: 'results.sarif'
        
    - name: 🔍 코드 보안 스캔
      run: |
        echo "보안 스캔 실행 중..."
        echo "보안 스캔 완료" 